DellayCall
Randomize
Set Active (component, transform, ...)

private IEnumerator DOPosition(Transform target, Vector3 endValue, float time, bool isLocal = true)
    {
        float epsilon = 0;
        Vector3 startValue = isLocal ? target.localPosition : target.position;
        if (isLocal)
        {
            while (epsilon < time)
            {
                epsilon += Time.deltaTime;

                float t = epsilon / time;
                t = t * t * t;
                target.localPosition = Vector3.Lerp(startValue, endValue, t);
                yield return null;
            }

            target.localPosition = endValue;
        }
        else
        {
            while (epsilon < time)
            {
                epsilon += Time.deltaTime;
                float t = epsilon / time;
                t = t * t * t;
                target.position = Vector3.Lerp(startValue, endValue, t);
                yield return null;
            }

            target.position = endValue;
        }
    }

    private IEnumerator DORotation(Transform target, Quaternion endValue, float time, bool isLocal = true)
    {
        float epsilon = 0;
        Quaternion startValue = isLocal ? target.localRotation : target.rotation;
        if (isLocal)
        {
            while (epsilon < time)
            {
                epsilon += Time.deltaTime;

                float t = epsilon / time;
                t = t * t * t;
                target.localRotation = Quaternion.Slerp(startValue, endValue, t);
                yield return null;
            }

            target.localRotation = endValue;
        }
        else
        {
            while (epsilon < time)
            {
                epsilon += Time.deltaTime;

                float t = epsilon / time;
                t = t * t * t;
                target.rotation = Quaternion.Slerp(startValue, endValue, t);
                yield return null;
            }

            target.rotation = endValue;
        }
    }